name: Build SpaceWarp

on:
  push:
    branches: ['build']
  workflow_dispatch:

permissions: write-all

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:

  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build-type:
          - main
          - debug
          - no-audio
          - tilemap
        include:
          - os: windows-latest
            isWindows: true
            arch: windows
          - os: ubuntu-latest
            isLinux: true
            arch: linux
          - os: macos-latest
            isMac: true
            arch: mac

          - build-type: main
            build-repo: Wam25/SpaceWarp
          - build-type: debug
            build-repo: Wam25/SpaceWarp
          - build-type: no-audio
            build-repo: Wam25/SpaceWarp
          - build-type: tilemap
            build-repo: ForkPrince/SpaceWarp

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: ${{ matrix.build-repo }}
          ref: ${{ matrix.build-type }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install Linux Packages
        if: ${{ matrix.isLinux }}
        run: sudo apt-get install libasound2-dev

      - name: Install Python Packages
        run: pip install pyxel pyinstaller pygame

      - name: Build App
        run: pyinstaller SpaceWarp.spec

      - uses: nadeemjazmawe/inno-setup-action-cli@v6.0.5
        if: ${{ matrix.isWindows }}
        with: 
          filepath: './ISS/script.iss'

      - name: Create Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.arch }}-${{ matrix.build-type }}
          path: ./dist/

      - name: Create Artifact (installer)
        if: ${{ matrix.isWindows }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.arch }}-installer-${{ matrix.build-type }}
          path: ./ISS/Output/

  web-build:
    strategy:
      matrix:
        build-type:
          - no-audio
          - no-audio-debug
        include:
          - build-type: no-audio
            build-repo: Wam25/SpaceWarp
            build-branch: no-audio
          - build-type: no-audio-debug
            build-repo: ForkPrince/SpaceWarp
            build-branch: no-audio

    runs-on: ubuntu-latest

    outputs:
      build-type: ${{ matrix.build-type }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: ${{ matrix.build-repo }}
          ref: ${{ matrix.build-branch }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install Linux Packages
        run: sudo apt-get install libsdl2-mixer-2.0-0 libsdl2-image-2.0-0 libsdl2-2.0-0 libasound2-dev

      - name: Install Python Packages
        run: pip install pyxel pyinstaller

      - name: Build App
        run: pyxel package ./ ./main.py

      - name: Build Web App
        run: pyxel app2html ./SpaceWarp.pyxapp

      - name: Move files
        run: |
          mkdir ./website
          mv ./SpaceWarp.html ./website/index.html
          mv ./ressources ./website/

      - name: Create Artifact
        uses: actions/upload-artifact@v3
        with:
          name: web-${{ matrix.build-type }}
          path: ./website/

      - name: Set Build Type Output
        run: echo ::set-output name=build-type::${{ matrix.build-type }}

  web-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    needs: web-build

    runs-on: ubuntu-latest

    steps:
      - name: Access Build Type
        run: echo "The build type is ${{ needs.web-build.outputs.build-type }}"

      - name: Download multiple artifacts
        uses: marcofaggian/action-download-multiple-artifacts@v4.0.0
        with:
          names: web-no-audio web-no-audio-debug
          paths: ./release ./debug
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: build.yml

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          name: web
          path: ./

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          artifact_name: web

  # web:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}

  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         repository: ForkPrince/SpaceWarp
  #         ref: web

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: 3.x

  #     - name: Install Linux Packages
  #       run: sudo apt-get install libsdl2-mixer-2.0-0 libsdl2-image-2.0-0 libsdl2-2.0-0 libasound2-dev

  #     - name: Install Python Packages
  #       run: pip install pyxel pyinstaller

  #     - name: Build Pyxel App (main)
  #       run: |
  #         cd release
  #         pyxel package ./ ./main.py

  #     - name: Build Web App (main)
  #       run: |
  #         cd release
  #         pyxel app2html ./release.pyxapp

  #     - name: Build Pyxel App (debug)
  #       run: |
  #         cd debug
  #         pyxel package ./ ./main.py

  #     - name: Build Web App (debug)
  #       run: | 
  #         cd debug
  #         pyxel app2html ./debug.pyxapp

  #     - name: Move Web Files
  #       run: |
  #         mkdir ./website/release
  #         mkdir ./website/debug
  #         mv ./release/release.html ./website/release/index.html
  #         mv ./release/ressources ./website/release
  #         mv ./debug/debug.html ./website/debug/index.html
  #         mv ./debug/ressources ./website/debug
  #         mv ./editor ./website

  #     - name: Setup Pages
  #       uses: actions/configure-pages@v3

  #     - name: Upload artifact
  #       uses: actions/upload-pages-artifact@v1
  #       with:
  #         name: web
  #         path: ./website

  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v2
  #       with:
  #         artifact_name: web
