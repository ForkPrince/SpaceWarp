name: Build SpaceWarp

on:
  push:
    branches: ['build']
  workflow_dispatch:

permissions: write-all

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:

  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build-type:
          - main
          - debug
          - no-audio
          - tilemap
        include:
          - os: windows-latest
            isWindows: true
            arch: windows
          - os: ubuntu-latest
            isLinux: true
            arch: linux
          - os: macos-latest
            isMac: true
            arch: mac

          - build-type: main
            build-repo: Wam25/SpaceWarp
          - build-type: debug
            build-repo: Wam25/SpaceWarp
          - build-type: no-audio
            build-repo: Wam25/SpaceWarp
          - build-type: tilemap
            build-repo: ForkPrince/SpaceWarp

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: ${{ matrix.build-repo }}
          ref: ${{ matrix.build-type }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install Linux Packages
        if: ${{ matrix.isLinux }}
        run: sudo apt-get install libasound2-dev

      - name: Install Python Packages
        run: pip install pyxel pyinstaller pygame

      - name: Build App
        run: pyinstaller SpaceWarp.spec

      - uses: nadeemjazmawe/inno-setup-action-cli@v6.0.5
        if: ${{ matrix.isWindows }}
        with: 
          filepath: './ISS/script.iss'

      - name: Create Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.arch }}-${{ matrix.build-type }}
          path: ./dist/

      - name: Create Artifact (installer)
        if: ${{ matrix.isWindows }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.arch }}-installer-${{ matrix.build-type }}
          path: ./ISS/Output/

  web-build:
    strategy:
      matrix:
        build-type:
          - no-audio
          - no-audio-debug
        include:
          - build-type: no-audio
            build-repo: Wam25/SpaceWarp
            build-branch: no-audio
          - build-type: no-audio-debug
            build-repo: ForkPrince/SpaceWarp
            build-branch: no-audio

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: ${{ matrix.build-repo }}
          ref: ${{ matrix.build-branch }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install Linux Packages
        run: sudo apt-get install libsdl2-mixer-2.0-0 libsdl2-image-2.0-0 libsdl2-2.0-0 libasound2-dev

      - name: Install Python Packages
        run: pip install pyxel pyinstaller

      - name: Build App
        run: pyxel package ./ ./main.py

      - name: Build Web App
        run: pyxel app2html ./SpaceWarp.pyxapp

      - name: Move files
        run: |
          mkdir ./website
          mv ./SpaceWarp.html ./website/index.html
          mv ./ressources ./website/

      - name: Add audio support
        if: ${{ matrix.build-type == 'no-audio-debug' }}
        run: |
          cd ./website
          echo '<audio id="backgroundMusic" src="./ressources/bgm.mp3" loop></audio>' >> index.html
          echo '<audio id="jumpSFX" src="./ressources/jump.wav"></audio>' >> index.html
          echo '<script>' >> index.html
          echo '    let startedGame = 0;' >> index.html
          echo '    function keyEvent(event) {' >> index.html
          echo '        if (event.keyCode === 13 && startedGame === 0) {' >> index.html
          echo '            document.getElementById("backgroundMusic").play();' >> index.html
          echo '            startedGame = 1;' >> index.html
          echo '        } else if (event.keyCode === 38 && startedGame === 1) document.getElementById("jumpSFX").play();' >> index.html
          echo '    }' >> index.html
          echo '    document.addEventListener("keydown", keyEvent);' >> index.html
          echo '    function gamepadButtonEvent(event) {' >> index.html
          echo '        const buttonPressed = event.buttons[0].pressed;' >> index.html
          echo '        if (buttonPressed && startedGame === 0) {' >> index.html
          echo '            document.getElementById("backgroundMusic").play();' >> index.html
          echo '            startedGame = 1;' >> index.html
          echo '        } else if (buttonPressed && startedGame === 1) document.getElementById("jumpSFX").play();' >> index.html
          echo '    }' >> index.html
          echo '    function updateGamepadState() {' >> index.html
          echo '        const gamepads = navigator.getGamepads();' >> index.html
          echo '        for (const gamepad of gamepads) {' >> index.html
          echo '            if (gamepad) gamepadButtonEvent(gamepad);' >> index.html
          echo '        }' >> index.html
          echo '        requestAnimationFrame(updateGamepadState);' >> index.html
          echo '    }' >> index.html
          echo '    requestAnimationFrame(updateGamepadState);' >> index.html
          echo '</script>' >> index.html


      - name: Create Artifact
        uses: actions/upload-artifact@v3
        with:
          name: web-${{ matrix.build-type }}
          path: ./website/

  web-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    needs: web-build

    runs-on: ubuntu-latest

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: web-no-audio
          path: ./release

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: web-no-audio-debug
          path: ./debug

      - name: Download and Extract Editor
        run: |
          curl -L -o editor.zip https://github.com/ForkPrince/SpaceWarp/archive/refs/heads/editor.zip
          unzip editor.zip
          mv SpaceWarp-editor editor
          rm editor.zip

      - name: Download and Extract Website
        run: |
          curl -L -o web.zip https://github.com/ForkPrince/SpaceWarp/archive/refs/heads/web.zip
          unzip web.zip
          mv SpaceWarp-web/* ./
          rmdir SpaceWarp-web
          rm web.zip

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          name: web
          path: ./

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          artifact_name: web
